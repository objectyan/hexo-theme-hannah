@use "../mixins/function";
@use "../mixins/grid";
@use "../mixins/variables";

// Container widths
//
// Set the container width, and override it for fixed navbars in media queries.
.container {
  @include function.container-fixed;

  @media (min-width: variables.$screen-sm-min) {
    width: variables.$container-sm;
  }
  @media (min-width: variables.$screen-md-min) {
    width: variables.$container-md;
  }
  @media (min-width: variables.$screen-lg-min) {
    width: variables.$container-lg;
  }
}

// Fluid container
//
// Utilizes the mixin meant for fixed width containers, but without any defined
// width for fluid, full width layouts.
.container-fluid {
  @include function.container-fixed;
}

// Row
//
// Rows contain and clear the floats of your columns.
.row {
  @include grid.make-row;
}

// Columns
//
// Common styles for small and large grid columns
@include grid.make-grid-columns;


// Extra small grid
//
// Columns, offsets, pushes, and pulls for extra small devices like
// smartphones.
@include grid.make-grid(xs);


// Small grid
//
// Columns, offsets, pushes, and pulls for the small device range, from phones
// to tablets.
@media (min-width: variables.$screen-sm-min) {
  @include grid.make-grid(sm);
}


// Medium grid
//
// Columns, offsets, pushes, and pulls for the desktop device range.
@media (min-width: variables.$screen-md-min) {
  @include grid.make-grid(md);
}


// Large grid
//
// Columns, offsets, pushes, and pulls for the large desktop device range.
@media (min-width: variables.$screen-lg-min) {
  @include grid.make-grid(lg);
}

a:hover, a {
  text-decoration: none;
}

.hannah-body {
  margin-bottom: 100px;
}